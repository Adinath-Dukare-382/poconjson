trigger: none

variables:
- name: env
  value: pocjson


pool: SamplePool

stages:
  - stage: azurescript
    jobs:
      - job:
        steps:
          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'Visual Studio Professional Subscription(36e17b0a-f140-42b7-933a-03495cc621b2)'
          #     scriptType: 'ps'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       az group list --query "[?tags.env=='business']" | ConvertFrom-Json | add-content "C:\Users\A888382\Documents\Testing1\test.txt"
                             
    
      
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Visual Studio Professional Subscription(36e17b0a-f140-42b7-933a-03495cc621b2)'
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $result1 = $(az appservice plan list --query "[?tags.env=='prod' && tags.owner=='adinath']" | ConvertFrom-Json)
                $res = $result1.resourceGroup
                write-output $res


          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Visual Studio Professional Subscription(36e17b0a-f140-42b7-933a-03495cc621b2)'
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              inlineScript: | 
                $result3 = $(az group list --query "[?tags.env=='business']" | ConvertFrom-Json)
                $rgname1 = $result3.name 
                write-output $rgname1
                $result4 = $(az appservice plan list --query "[?resourceGroup=='$rgname1']" | ConvertFrom-Json)
                $planname = $result4.name
                write-output $planname
                az appservice plan show --name $planname --resource-group $rgname1 --query '{rname:resourceGroup, pname:name}' -o json
              
      

  # - template: ../templates/terraform-deploy.yml
  #   parameters:
  #     environment: ${{ variables.env }}
  #     working_dir: "$(Build.SourcesDirectory)/POCJson/env"
  #     serviceconn_name : "svc-poc2"
  #     tfresourcegroupname : "config-demo2"
  #     tfstorageaccountname : "globalstorageac"
  #     azureRmContainerName : "globalstoragecon2"
  #     tfstatefile : "terraform-tfstate.tfstate"
